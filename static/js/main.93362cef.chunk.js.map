{"version":3,"sources":["components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","components/Nav.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["Player","currentSong","isPlaying","setIsPlaying","audioRef","setSongInfo","songInfo","song","setCurrentSong","setSongs","activeLibraryHandler","nextPrev","newSong","map","track","id","active","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","trackAnim","transform","animationPercentage","className","currentTime","min","max","duration","value","onChange","e","target","type","style","background","color","onClick","icon","faAngleLeft","size","pause","faPause","faPlay","faAngleRight","Song","src","cover","name","artist","LibrarySong","songs","songSelectHandler","selectedSong","filter","state","Library","libraryStatus","Nav","setLibraryStatus","faMusic","chillHop","audio","uuidv4","App","useRef","useState","data","timeupdateHandler","roundedCurrent","round","roundedDuration","console","log","songEndHandler","onTimeUpdate","onLoadedMetadata","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93362cef.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faPause,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default function Player({\r\n  currentSong,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  audioRef,\r\n  setSongInfo,\r\n  songInfo,\r\n  song,\r\n  setCurrentSong,\r\n  setSongs,\r\n}) {\r\n  const activeLibraryHandler = (nextPrev) => {\r\n    // Add active state\r\n    const newSong = song.map((track) => {\r\n      if (track.id === nextPrev.id) {\r\n        return {\r\n          ...track,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...track,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSong);\r\n  };\r\n  // Event Handler\r\n  const playSongHandler = () => {\r\n    isPlaying ? audioRef.current.pause() : audioRef.current.play();\r\n\r\n    setIsPlaying(!isPlaying);\r\n  };\r\n\r\n  const getTime = (time) => {\r\n    return (\r\n      // Convert to time format\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n\r\n  const dragHandler = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n  };\r\n\r\n  const skipTrackHandler = async (direction) => {\r\n    let currentIndex = song.findIndex((track) => track.id === currentSong.id);\r\n\r\n    if (direction === \"skip-forw\") {\r\n      // From last to top of list\r\n      await setCurrentSong(song[(currentIndex + 1) % song.length]);\r\n      activeLibraryHandler(song[(currentIndex + 1) % song.length]);\r\n    }\r\n    if (direction === \"skip-back\") {\r\n      // Check if start of list\r\n      if ((currentIndex - 1) % song.length === -1) {\r\n        await setCurrentSong(song[song.length - 1]);\r\n        activeLibraryHandler(song[song.length - 1]);\r\n\r\n        if (isPlaying) audioRef.current.play();\r\n\r\n        return; // to stop this function from running next code\r\n      }\r\n      await setCurrentSong(song[(currentIndex - 1) % song.length]);\r\n      activeLibraryHandler(song[(currentIndex - 1) % song.length]);\r\n    }\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n  //State\r\n  // Add Styles\r\n  const trackAnim = {\r\n    transform: `translateX(${songInfo.animationPercentage}%)`,\r\n  };\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-control\">\r\n        <p>{getTime(songInfo.currentTime)}</p>\r\n        <div className=\"track\">\r\n          <input\r\n            min={0}\r\n            max={songInfo.duration || 0}\r\n            value={songInfo.currentTime}\r\n            onChange={dragHandler}\r\n            type=\"range\"\r\n            style={{\r\n              background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`,\r\n            }}\r\n          />\r\n          <div style={trackAnim} className=\"animate-track\"></div>\r\n        </div>\r\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(\"skip-back\")}\r\n          className=\"skip-back\"\r\n          icon={faAngleLeft}\r\n          size=\"2x\"\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={playSongHandler}\r\n          className=\"play\"\r\n          icon={!isPlaying ? faPlay : faPause}\r\n          size=\"2x\"\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(\"skip-forw\")}\r\n          className=\"skip-forw\"\r\n          icon={faAngleRight}\r\n          size=\"2x\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Song({ currentSong, isPlaying }) {\r\n  return (\r\n    <div>\r\n      <div className={`song-container ${isPlaying ? \"is-playing\" : \"\"}`}>\r\n        <img src={currentSong.cover}></img>\r\n        <h2>{currentSong.name}</h2>\r\n        <h3>{currentSong.artist}</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function LibrarySong({\r\n  song,\r\n  songs,\r\n  setCurrentSong,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n}) {\r\n  const songSelectHandler = async () => {\r\n    const selectedSong = songs.filter((state) => state.id === song.id);\r\n    await setCurrentSong(selectedSong[0]);\r\n\r\n    // Add active state\r\n    const newSong = songs.map((track) => {\r\n      if (track.id === song.id) {\r\n        return {\r\n          ...track,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...track,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSong);\r\n\r\n    //check if song is playing\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        onClick={songSelectHandler}\r\n        className={`library-Song ${song.active ? \"selected\" : \"\"}`}\r\n      >\r\n        <img src={song.cover}></img>\r\n        <div className=\"song-description\">\r\n          <h3>{song.name}</h3>\r\n          <h4>{song.artist}</h4>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport LibrarySong from \"./LibrarySong\";\r\n\r\nexport default function Library({\r\n  song,\r\n  setCurrentSong,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n  libraryStatus,\r\n}) {\r\n  return (\r\n    <div className={`library ${libraryStatus ? \"active-library\" : \"\"}`}>\r\n      <h2>Library</h2>\r\n      <div className=\"library-song\">\r\n        {song.map((track) => (\r\n          <LibrarySong\r\n            setCurrentSong={setCurrentSong}\r\n            song={track}\r\n            songs={song}\r\n            key={track.id}\r\n            audioRef={audioRef}\r\n            isPlaying={isPlaying}\r\n            setSongs={setSongs}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nav = ({ libraryStatus, setLibraryStatus }) => {\r\n  return (\r\n    <nav>\r\n      <h1>Waves</h1>\r\n      <button onClick={() => setLibraryStatus(!libraryStatus)}>\r\n        Library\r\n        <FontAwesomeIcon icon={faMusic} />\r\n      </button>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nfunction chillHop() {\r\n  return [\r\n    {\r\n      name: \"Beaver Creek\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: true,\r\n    },\r\n    {\r\n      name: \"Daylight\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Keep Going\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Nightfall\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Reflection\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Under the City Stars\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    //ADD MORE HERE\r\n  ];\r\n}\r\n\r\nexport default chillHop;\r\n","import React, { useState, useRef } from \"react\";\n// Import styles\nimport \"./styles/app.scss\";\n\n// Adding components\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\n//Import data\nimport data from \"./data\";\n\n//Import utils\n\nfunction App() {\n  //Ref\n  const audioRef = useRef(null);\n\n  //State\n  const [song, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(song[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  });\n  const [libraryStatus, setLibraryStatus] = useState(false);\n\n  //Function\n  const timeupdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    // Calculate percentage\n\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const animationPercentage = Math.round(\n      (roundedCurrent / roundedDuration) * 100\n    );\n    console.log(animationPercentage);\n\n    setSongInfo({\n      ...songInfo,\n      currentTime: current,\n      duration,\n      animationPercentage,\n    });\n  };\n\n  const songEndHandler = async () => {\n    let currentIndex = song.findIndex((track) => track.id === currentSong.id);\n    await setCurrentSong(song[(currentIndex + 1) % song.length]);\n    if (isPlaying) audioRef.current.play();\n  };\n  return (\n    <div className={`App ${libraryStatus ? \"library-active\" : \"\"}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} isPlaying={isPlaying} />\n      <Player\n        isPlaying={isPlaying}\n        currentSong={currentSong}\n        setIsPlaying={setIsPlaying}\n        audioRef={audioRef}\n        songInfo={songInfo}\n        setSongInfo={setSongInfo}\n        song={song}\n        setCurrentSong={setCurrentSong}\n        setSongs={setSongs}\n      />\n      <Library\n        song={song}\n        setCurrentSong={setCurrentSong}\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n      />\n      <audio\n        onTimeUpdate={timeupdateHandler}\n        onLoadedMetadata={timeupdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={songEndHandler}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}